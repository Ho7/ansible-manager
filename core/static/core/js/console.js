// Generated by CoffeeScript 1.10.0
(function() {
  var formatOutput, renderMessage, scrollConsole, scrolling, setLogs;

  scrolling = true;

  scrollConsole = function() {
    var console, logs;
    if (scrolling) {
      console = $('.console');
      logs = $('.logs');
      return console.animate({
        scrollTop: logs.height()
      }, 0);
    }
  };

  scrollConsole();

  setLogs = function(logs) {
    var j, len, log, ref, results;
    results = [];
    for (j = 0, len = logs.length; j < len; j++) {
      log = logs[j];
      if (log.status === 'in_progress') {
        renderMessage(log.output || log.message, log.status);
      } else {
        renderMessage(log.message, log.status);
        if (log.output) {
          renderMessage(log.output, log.status);
        }
      }
      if ((ref = log.task_status) === 'fail' || ref === 'stopped' || ref === 'completed') {
        this.task_running = false;
        $('#stop').hide();
        results.push($('#replay').show());
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  renderMessage = function(message, status) {
    message = formatOutput(message);
    $('.logs').append("<p class='line log-" + status + "'>" + message + "</p>");
    return scrollConsole();
  };

  this.getLogs = function(force, last_id) {
    var url;
    if (!force && !task_running) {
      return;
    }
    url = GET_LOGS_URL;
    if (!last_id && last_log_id) {
      last_id = last_log_id;
    }
    if (!force && last_id) {
      url = url + "?last_log_id=" + last_id;
    }
    return $.get(url, function(data) {
      if (data.length > 0) {
        last_id = data[data.length - 1].id;
        setLogs(data);
      }
      return setTimeout((function() {
        return getLogs(false, last_id);
      }), 1000);
    });
  };

  getLogs(true);

  formatOutput = function(message) {
    return message.replace(/\n/g, '<br>').replace(/\s/g, '&nbsp;');
  };

  $('.line').each(function(i, element) {
    var e;
    e = $(element);
    return e.html(formatOutput(e.html()));
  });

}).call(this);
